[{"C:\\Users\\FURKAN\\Desktop\\PhiMajor-Job-Application-Task\\phimajor-job-application-task\\src\\App.js":"1","C:\\Users\\FURKAN\\Desktop\\PhiMajor-Job-Application-Task\\phimajor-job-application-task\\src\\reportWebVitals.js":"2","C:\\Users\\FURKAN\\Desktop\\PhiMajor-Job-Application-Task\\phimajor-job-application-task\\src\\Assets\\components\\shared\\Nav.js":"3","C:\\Users\\FURKAN\\Desktop\\PhiMajor-Job-Application-Task\\phimajor-job-application-task\\src\\Assets\\components\\GetList.js":"4","C:\\Users\\FURKAN\\Desktop\\PhiMajor-Job-Application-Task\\phimajor-job-application-task\\src\\Assets\\components\\UserDetail.js":"5","C:\\Users\\FURKAN\\Desktop\\PhiMajor-Job-Application-Task\\phimajor-job-application-task\\src\\Assets\\components\\Comments.js":"6","C:\\Users\\FURKAN\\Desktop\\phimajor-job-application-with-react-js\\phimajor-demo\\src\\index.tsx":"7","C:\\Users\\FURKAN\\Desktop\\phimajor-job-application-with-react-js\\phimajor-demo\\src\\reportWebVitals.js":"8","C:\\Users\\FURKAN\\Desktop\\phimajor-job-application-with-react-js\\phimajor-demo\\src\\App.tsx":"9","C:\\Users\\FURKAN\\Desktop\\phimajor-job-application-with-react-js\\phimajor-demo\\src\\Assets\\components\\UserDetail.tsx":"10","C:\\Users\\FURKAN\\Desktop\\phimajor-job-application-with-react-js\\phimajor-demo\\src\\Assets\\components\\shared\\Nav.tsx":"11","C:\\Users\\FURKAN\\Desktop\\phimajor-job-application-with-react-js\\phimajor-demo\\src\\Assets\\components\\GetList.tsx":"12","C:\\Users\\FURKAN\\Desktop\\phimajor-job-application-with-react-js\\phimajor-demo\\src\\Assets\\components\\Comments.tsx":"13"},{"size":632,"mtime":1611941763572,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"16","hashOfConfig":"15"},{"size":879,"mtime":1611859953938,"results":"17","hashOfConfig":"15"},{"size":1476,"mtime":1611942530091,"results":"18","hashOfConfig":"15"},{"size":4187,"mtime":1612026463128,"results":"19","hashOfConfig":"15"},{"size":5280,"mtime":1612026676556,"results":"20","hashOfConfig":"15"},{"size":457,"mtime":1612031120578,"results":"21","hashOfConfig":"22"},{"size":362,"mtime":499162500000,"results":"23","hashOfConfig":"22"},{"size":632,"mtime":1612031938121,"results":"24","hashOfConfig":"22"},{"size":4212,"mtime":1612031599975,"results":"25","hashOfConfig":"22"},{"size":523,"mtime":1612031897687,"results":"26","hashOfConfig":"22"},{"size":1487,"mtime":1612031914962,"results":"27","hashOfConfig":"22"},{"size":5302,"mtime":1612031858889,"results":"28","hashOfConfig":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"by1z7v",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"31"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"sr2zjv",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\FURKAN\\Desktop\\PhiMajor-Job-Application-Task\\phimajor-job-application-task\\src\\App.js",[],["60","61"],"C:\\Users\\FURKAN\\Desktop\\PhiMajor-Job-Application-Task\\phimajor-job-application-task\\src\\reportWebVitals.js",[],"C:\\Users\\FURKAN\\Desktop\\PhiMajor-Job-Application-Task\\phimajor-job-application-task\\src\\Assets\\components\\shared\\Nav.js",[],"C:\\Users\\FURKAN\\Desktop\\PhiMajor-Job-Application-Task\\phimajor-job-application-task\\src\\Assets\\components\\GetList.js",[],"C:\\Users\\FURKAN\\Desktop\\PhiMajor-Job-Application-Task\\phimajor-job-application-task\\src\\Assets\\components\\UserDetail.js",["62"],"import React, {useState,useEffect} from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport Image from '../images/user.svg'\r\n// import {Link} from 'react-router-dom'\r\nimport Comments from './Comments'\r\n// import ReactDOM from 'react-dom';\r\nimport { Modal }from 'react-bootstrap';\r\n\r\n    \r\n\r\n function UserDetail({ match }) {\r\n    useEffect(()=>{\r\n        fetchItems();\r\n    },[]);\r\n\r\n    const [persons,setPersons] = useState([]);\r\n    const [personPosts,setPersonPosts] = useState([]);\r\n    const fetchItems = async () =>{\r\n        const data = await fetch(`https://jsonplaceholder.typicode.com/users?id=${match.params.id}`);\r\n        const persons = await data.json()\r\n        setPersons(persons)\r\n        const posts = await fetch(`https://jsonplaceholder.typicode.com/posts?userId=${match.params.id}`);\r\n        const personPosts = await posts.json()\r\n        setPersonPosts(personPosts)\r\n        \r\n    }\r\n    const [modalData,setModalData] = React.useState({\r\n        isOpen:false,\r\n        postid:0\r\n    });\r\n   \r\n    function closeModal(){\r\n      setModalData({isOpen:false})\r\n    }\r\n\r\n    return (\r\n            <div className=\"container d-flex flex-wrap mt-4 justify-content-center\">\r\n                {\r\n                persons.map(person=>\r\n                <div className=\"d-flex p-4 col-md-12 col-lg-12 flex-wrap flex-1 \" key={person.id}>\r\n                    <div className=\"card align-items-center fluid w-100 h-100 p-4\"  >\r\n                        <figure><img className=\"card-img-top\" src={Image} alt=\"Card images cap\"/></figure>\r\n                        <div className=\"card-body w-100 text-left \">\r\n                            <h5 className=\"card-title\"><b className=\"text-info\">Name Surname :</b> {person.name}</h5>\r\n                            <p className=\"card-text\"><b className=\"text-info\">Email :</b>{person.email}</p>\r\n                            <p className=\"card-text \"><b className=\"text-info\">Address :</b> {person.address.street}, {person.address.suite}, {person.address.city}, {person.address.zipcode}</p>\r\n                            <p className=\"card-text\"><b className=\"text-info\">Phone :</b> {person.phone}</p>\r\n                            <p className=\"card-text\"><b className=\"text-info\">Website :</b> {person.website}</p>\r\n                            <h5 className=\"card-title text-center\"><b className=\"text-info\">{person.name} Posts</b></h5>\r\n                            {\r\n                                personPosts.map(posts=>\r\n                                    <div className=\"card mb-3\" key={posts.id}>\r\n                                        <div className=\"card-header\">\r\n                                        <b className=\"text-info\">Title :</b> {posts.title}\r\n                                        </div>\r\n                                        <div className=\"card-header\">\r\n                                        <b className=\"text-info\">PostID :</b> {posts.id}\r\n                                        </div>\r\n                                        <div className=\"card-body\">\r\n                                            <blockquote className=\"blockquote mb-0\">\r\n                                            <p>{posts.body}.</p>\r\n                                            <button className=\"btn-primary\" onClick={()=>setModalData({postid:posts.id,isOpen:true})}>Show Related Comments</button>\r\n                                            </blockquote>\r\n                                        </div>\r\n                                    </div>\r\n                                )\r\n                            }\r\n                            \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                    )}\r\n                        <Modal \r\n                            show={modalData.isOpen}\r\n                            onHide={closeModal}\r\n                            >\r\n                            <Modal.Body>\r\n                                <Comments close={closeModal} postID={modalData.postid}/>\r\n                            </Modal.Body>\r\n                        </Modal>              \r\n            </div>\r\n            )\r\n}\r\nexport default UserDetail\r\n\r\n\r\n\r\n\r\n","C:\\Users\\FURKAN\\Desktop\\PhiMajor-Job-Application-Task\\phimajor-job-application-task\\src\\Assets\\components\\Comments.js",["63"],"import React,{useState,useEffect} from 'react'\r\nimport '../css/Modal.css'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\n\r\nconst Modal = ({close,postID}) =>{\r\n    useEffect(()=>{\r\n        fetchItems();\r\n    },[]);\r\n    \r\n    const [comments, setComments] = useState([])\r\n    const fetchItems = async () =>{\r\n        const data = await fetch(`https://jsonplaceholder.typicode.com/comments?postId=${postID}`);\r\n        const comments = await data.json()\r\n        setComments(comments) \r\n    }\r\n\r\n    const DeleteComment = (id)=>{\r\n        \r\n        if (window.confirm(\"Do you want to 'Delete' this comment?\")) {\r\n            deleteItems(id);\r\n\r\n        }\r\n    }       \r\n    const deleteItems = async (id) =>{\r\n        await fetch(`https://jsonplaceholder.typicode.com/comments/${id}`,{\r\n            method:'DELETE',\r\n        });\r\n    }\r\n\r\n\r\n    const [sendPostId, setSendPostId] = useState({\r\n        postId:postID,\r\n        email:'',\r\n        title:'',\r\n        body:''\r\n    })\r\n    const submit = e => {\r\n        e.preventDefault()\r\n        fetch('https://jsonplaceholder.typicode.com/comments', {\r\n          method: 'POST',\r\n          body: JSON.stringify({ sendPostId }),\r\n          headers: { 'Content-Type': 'application/json' },\r\n        })\r\n          .then(res => {\r\n            if(res.status === 200 || res.status === 201)\r\n            {\r\n                alert(\"Your Comment Send Successfully!!\")\r\n                return res.json();     \r\n            }\r\n            })\r\n          .then(json => setSendPostId(json.sendPostId))\r\n          \r\n      }\r\n      \r\n\r\n    \r\n\r\n       return (\r\n            <div className={\"modal-wrapper\"}>\r\n                <div className={\"modal-backdrop\"} onClick={close}></div>\r\n                <div className={\"modal-box\"}>\r\n                    <button onClick ={()=>close()}  className=\"close-btn\"></button>\r\n                    <h1 className=\"text-info text-center pb-4\">Related Comments</h1>\r\n                    {\r\n                        comments.map(comment=>\r\n                            <div className=\"card mb-3\" key={comment.id}>\r\n                                <button className=\"btn-danger deleteCommentBtn\" onClick={()=>DeleteComment(comment.id)}>Delete This Comment</button>\r\n                                <div className=\"card-header d-flex flex-column\">\r\n                                    <span className=\"text-dark\"><b className=\"text-info\">Email :</b> {comment.email}</span>\r\n                                    <span className=\"text-dark\"><b className=\"text-info\">Title :</b> {comment.name}</span>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <blockquote className=\"blockquote mb-0\">\r\n                                    <p>{comment.body}.</p>\r\n                                    </blockquote>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    }\r\n                    <h1 className=\"text-info text-center pb-4\">Send Comment to the Post</h1>\r\n                    <form onSubmit={submit}>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"exampleInputEmail1\">Email Adress</label>\r\n                            <input type=\"email\" \r\n                            className=\"form-control\" \r\n                            id=\"exampleInputEmail1\" \r\n                            placeholder=\"Enter email\"\r\n                            name=\"user[email]\"\r\n                            value={sendPostId.email}\r\n                            required\r\n                            onChange={e => setSendPostId({ ...sendPostId, email: e.target.value })}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"title\">Title</label>\r\n                            <input type=\"text\" \r\n                            className=\"form-control\" \r\n                            id=\"title\" \r\n                            placeholder=\"Enter title\"\r\n                            name=\"user[title]\"\r\n                            value={sendPostId.title}\r\n                            onChange={e => setSendPostId({ ...sendPostId, title: e.target.value })}\r\n                            required\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"message\">Message</label>\r\n                            <textarea type=\"text\" \r\n                            className=\"form-control\" \r\n                            id=\"message\" \r\n                            placeholder=\"Message\" \r\n                            rows=\"5\"\r\n                            name=\"user[message]\"\r\n                            value={sendPostId.body}\r\n                            onChange={e => setSendPostId({ ...sendPostId, body: e.target.value })}\r\n                            minLength=\"10\"\r\n                            />\r\n                        </div>\r\n                        <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n \r\n}\r\n    \r\n\r\nexport default Modal","C:\\Users\\FURKAN\\Desktop\\phimajor-job-application-with-react-js\\phimajor-demo\\src\\index.tsx",[],["64","65"],"C:\\Users\\FURKAN\\Desktop\\phimajor-job-application-with-react-js\\phimajor-demo\\src\\reportWebVitals.js",[],["66","67"],"C:\\Users\\FURKAN\\Desktop\\phimajor-job-application-with-react-js\\phimajor-demo\\src\\App.tsx",[],"C:\\Users\\FURKAN\\Desktop\\phimajor-job-application-with-react-js\\phimajor-demo\\src\\Assets\\components\\UserDetail.tsx",["68"],"C:\\Users\\FURKAN\\Desktop\\phimajor-job-application-with-react-js\\phimajor-demo\\src\\Assets\\components\\shared\\Nav.tsx",[],"C:\\Users\\FURKAN\\Desktop\\phimajor-job-application-with-react-js\\phimajor-demo\\src\\Assets\\components\\GetList.tsx",[],"C:\\Users\\FURKAN\\Desktop\\phimajor-job-application-with-react-js\\phimajor-demo\\src\\Assets\\components\\Comments.tsx",["69"],{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":14,"column":7,"nodeType":"76","endLine":14,"endColumn":9,"suggestions":"77"},{"ruleId":"74","severity":1,"message":"75","line":8,"column":7,"nodeType":"76","endLine":8,"endColumn":9,"suggestions":"78"},{"ruleId":"70","replacedBy":"79"},{"ruleId":"72","replacedBy":"80"},{"ruleId":"70","replacedBy":"79"},{"ruleId":"72","replacedBy":"80"},{"ruleId":"74","severity":1,"message":"75","line":14,"column":7,"nodeType":"76","endLine":14,"endColumn":9,"suggestions":"81"},{"ruleId":"74","severity":1,"message":"75","line":8,"column":7,"nodeType":"76","endLine":8,"endColumn":9,"suggestions":"82"},"no-native-reassign",["83"],"no-negated-in-lhs",["84"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchItems'. Either include it or remove the dependency array.","ArrayExpression",["85"],["86"],["83"],["84"],["87"],["88"],"no-global-assign","no-unsafe-negation",{"desc":"89","fix":"90"},{"desc":"89","fix":"91"},{"desc":"89","fix":"92"},{"desc":"89","fix":"93"},"Update the dependencies array to be: [fetchItems]",{"range":"94","text":"95"},{"range":"96","text":"95"},{"range":"97","text":"95"},{"range":"98","text":"95"},[387,389],"[fetchItems]",[210,212],[391,393],[214,216]]